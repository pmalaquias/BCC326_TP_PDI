{pkgs ? import <nixpkgs> {}}:
pkgs.mkShell {
  buildInputs = with pkgs; [
    # Python e pip
    python311
    python311Packages.pip

    # OpenCV com suporte para webcam e GUI
    python311Packages.opencv4

    # Depend√™ncias principais do script
    python311Packages.numpy
    python311Packages.tensorflow

    # Depend√™ncias do sistema para OpenCV/webcam
    libv4l
    v4l-utils

    # Bibliotecas gr√°ficas necess√°rias para cv2.imshow
    xorg.libX11
    xorg.libXext
    gtk3
    glib

    # Depend√™ncias opcionais que podem ser √∫teis
    python311Packages.pillow
    python311Packages.matplotlib
  ];

  # Vari√°veis de ambiente
  shellHook = ''
    echo "üöÄ Ambiente Nix para Detector de Aten√ß√£o"
    echo "======================================"
    echo "Python: $(python --version)"
    echo "OpenCV: $(python -c "import cv2; print(cv2.__version__)" 2>/dev/null || echo "N√£o instalado")"
    echo "TensorFlow: $(python -c "import tensorflow as tf; print(tf.__version__)" 2>/dev/null || echo "N√£o instalado")"
    echo ""
    echo "üí° Para instalar depend√™ncias extras:"
    echo "pip install --user keras pillow"
    echo ""
    echo "üé• Para testar webcam:"
    echo "python -c \"import cv2; print('OpenCV OK')\" && echo '‚úÖ OpenCV funcionando'"
    echo ""
    echo "‚ñ∂Ô∏è  Para rodar o script:"
    echo "python detector_webcam.py"
    echo "======================================"

    # Configurar PYTHONPATH se necess√°rio
    export PYTHONPATH="$PWD:$PYTHONPATH"

    # Configurar para encontrar bibliotecas do sistema
    export LD_LIBRARY_PATH="${pkgs.lib.makeLibraryPath [
      pkgs.libv4l
      pkgs.xorg.libX11
      pkgs.xorg.libXext
      pkgs.gtk3
      pkgs.glib
    ]}:$LD_LIBRARY_PATH"
  '';

  # Permitir pacotes n√£o-livres se necess√°rio (para CUDA/etc)
  nixpkgs.config.allowUnfree = true;
}
